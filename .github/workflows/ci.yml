name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4

    - uses: pnpm/action-setup@v3
      with:
        version: 9

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build package
      run: pnpm run build

    - name: Run tests
      run: pnpm run test -- --coverage

    - name: Upload coverage reports
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v4
      with:
        files: ./coverage/lcov.info
        fail_ci_if_error: false

  build-example:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: pnpm/action-setup@v3
      with:
        version: 9

    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'

    - name: Install root dependencies
      run: pnpm install --frozen-lockfile

    - name: Build package
      run: pnpm run build

    - name: Install example dependencies
      working-directory: ./examples/starter
      run: pnpm install

    - name: Build example app
      working-directory: ./examples/starter
      run: pnpm run build

  package-validation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: pnpm/action-setup@v3
      with:
        version: 9

    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build package
      run: pnpm run build

    - name: Check package contents
      run: |
        npm pack --dry-run
        echo "Package size:"
        npm pack --dry-run 2>/dev/null | grep "npm notice" | tail -1

    - name: Validate package.json
      run: |
        npm pkg get name version main types exports

    - name: Check for required files
      run: |
        test -f README.md || exit 1
        test -f LICENSE || exit 1
        test -d dist || exit 1
        echo "All required files present"